load("@build_bazel_rules_nodejs//:index.bzl", "npm_package")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm_bazel_terser//:index.bzl", "terser_minified")
load("//:tools-bazel/jest.bzl", "jest_test")

exports_files(
    ["tsconfig.json"],
    visibility = ["//visibility:public"],
)

#         "flow-typed/**",
#     visibility = ["//visibility:private"],

[
    rollup_bundle(
        name = "mobx.%s" % format,
        config_file = "rollup.config.js",
        entry_point = "//src:mobx.ts",
        format = format,
        deps = [
            "//src",
            "//src:es5_src",
            "@npm//@rollup/plugin-node-resolve",
            "@npm//@rollup/plugin-replace",
        ],
    )
    for format in [
        "cjs",
        "esm",
        "umd",
    ]
]

rollup_bundle(
    name = "mobx.es6",
    config_file = "rollup.config.js",
    entry_point = "//src:mobx.ts",
    format = "esm",
    deps = [
        "//src:es6_src",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//@rollup/plugin-replace",
    ],
)

terser_minified(
    name = "mobx.cjs.min",
    src = ":mobx.cjs",
)

terser_minified(
    name = "mobx.umd.min",
    src = ":mobx.umd",
)

npm_package(
    name = "mobx",
    srcs = ["package.json"],
    replacements = {"//internal/": "//"},
    deps = [
        "LICENSE",
        ":mobx.cjs.js",  # was lib/mobx.js
        ":mobx.cjs.min",  # was lib/mobx.min.js
        ":mobx.es6.js",  # ES6 in ES Modules
        ":mobx.esm.js",  # was lib/mobx.module.js
        ":mobx.umd.js",  # was lib/mobx.umd.js
        ":mobx.umd.min",  # was lib/mobx.umd.min.js
        "//src",
    ],
)

# pkg_tar(
#     name = "mobx_archive",
#     srcs = [":mobx"],
#     extension = "tar.gz",
#     strip_prefix = "./mobx",
#     tags = ["manual"],
# )

# function copyFlowDefinitions() {
#     console.log("Copying flowtype definitions")
#     fs.copyFileSync("flow-typed/mobx.js", "lib/mobx.js.flow")
#     console.log("Copying of flowtype definitions done")
# }

# #############################################################
jest_test(
    name = "js_jest_tests",
    size = "small",
    srcs = glob([
        "test/base/*.js",
        # TODO one TS file in tests
        # tsconfig = ":tsconfig.test.json",
        # "@npm//@types/jest",
    ]),
    jest_config = ":jest.config.js",
    deps = glob([
        "test/utils/*.js",
        "test/base/__snapshots__/*",
    ]) + [
        "//src:es5_src",
        "@npm//@babel/core",
        "@npm//@babel/plugin-proposal-class-properties",
        "@npm//@babel/plugin-proposal-decorators",
        "@npm//@babel/plugin-transform-runtime",
        "@npm//@babel/preset-env",
        "@npm//@babel/runtime",
        "@npm//@jest/transform",
        "@npm//babel-jest",
        "@npm//iterall",
        "@npm//serializr",
        "test/.babelrc",
        "package.json",
    ],
)

# [
#     rollup_bundle(
#         name = "bundle.%s" % format,
#         entry_point = "foo.js",
#         format = format,
#     )
#     for format in [
#         "cjs",
#         "umd",
#     ]
# ]
