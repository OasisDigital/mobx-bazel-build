load("@build_bazel_rules_nodejs//:index.bzl", "npm_package_bin", "pkg_npm")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm_bazel_terser//:index.bzl", "terser_minified")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("//:tools-bazel/jest.bzl", "jest_test")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

exports_files(
    ["tsconfig.json"],
    visibility = ["//visibility:public"],
)

[
    rollup_bundle(
        name = "mobx.%s" % format,
        config_file = "rollup.config.js",
        entry_point = "//src:mobx.ts",
        format = format,
        deps = [
            "//src",
            "//src:es5_src",
            "@npm//@rollup/plugin-node-resolve",
            "@npm//@rollup/plugin-replace",
        ],
    )
    for format in [
        "cjs",
        "esm",
        "umd",
    ]
]

rollup_bundle(
    name = "mobx.es6",
    config_file = "rollup.config.js",
    entry_point = "//src:mobx.ts",
    format = "esm",
    deps = [
        "//src:es6_src",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//@rollup/plugin-replace",
    ],
)

terser_minified(
    name = "mobx.cjs.min",
    src = ":mobx.cjs",
)

terser_minified(
    name = "mobx.umd.min",
    src = ":mobx.umd",
)

copy_file(
    name = "mobx-flow",
    src = "flow-typed/mobx.js",
    out = ":mobx.js.flow",
)

pkg_npm(
    name = "mobx",
    srcs = ["package.json"],
    visibility = ["//visibility:public"],
    deps = [
        "LICENSE",
        ":mobx.cjs.js",  # was lib/mobx.js
        ":mobx.cjs.min",  # was lib/mobx.min.js
        ":mobx.es6.js",  # ES6 in ES Modules
        ":mobx.esm.js",  # was lib/mobx.module.js
        ":mobx.umd.js",  # was lib/mobx.umd.js
        ":mobx.umd.min",  # was lib/mobx.umd.min.js
        ":mobx-flow",  # Not pointed to by package.json directly
        "//src",
    ],
)

filegroup(
    name = "mobx_untainted",
    srcs = [":mobx"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "mobx_archive",
    srcs = [":mobx"],
    extension = "tar.gz",
    strip_prefix = "./mobx",
    visibility = ["//visibility:public"],
)

# #############################################################

npm_package_bin(
    name = "check_flow",
    args = ["check"],
    data = glob([
        "src/**",
        "flow-typed/**",
        "test/flow/**",
    ]) + [".flowconfig"],
    output_dir = True,
    package = "flow-bin",
    package_bin = "flow",
)

jest_test(
    name = "js_jest_tests",
    size = "small",
    srcs = glob([
        "test/base/*.js",
        # TODO one TS file in tests
        # tsconfig = ":tsconfig.test.json",
        # "@npm//@types/jest",
    ]),
    jest_config = ":jest.config.js",
    deps = glob([
        "test/utils/*.js",
        "test/base/__snapshots__/*",
    ]) + [
        "//src:es5_src",
        "@npm//@babel/core",
        "@npm//@babel/plugin-proposal-class-properties",
        "@npm//@babel/plugin-proposal-decorators",
        "@npm//@babel/plugin-transform-runtime",
        "@npm//@babel/preset-env",
        "@npm//@babel/runtime",
        "@npm//@jest/transform",
        "@npm//babel-jest",
        "@npm//iterall",
        "@npm//serializr",
        "@npm//tslib",
        "test/.babelrc",
        "package.json",
    ],
)
